# This is the build file for project "kernel"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.5.1

# Rules for compiling.

rule c_COMPILER
 command = /usr/bin/clang $ARGS -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C object $out.

rule cpp_COMPILER
 command = /usr/bin/clang++ $ARGS -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C++ object $out.

# Rules for linking.

rule cpp_LINKER
 command = /usr/bin/clang++ $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out.

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate /home/werwolv/Dev/RTOS/kernel /home/werwolv/Dev/RTOS/kernel/build --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build kernel@exe/source_init_vtor.s.o: c_COMPILER ../source/init/vtor.s
 DEPFILE = kernel@exe/source_init_vtor.s.o.d
 ARGS = -Ikernel@exe -I. -I.. -I../include -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c17 -g -target arm-none-linux -Wall -g -Og -ffreestanding -nostdlib -mcpu=cortex-m7 -mthumb -mfloat-abi=hard -Wno-unused-command-line-argument -fno-stack-protector -no-pie

build kernel@exe/source_init_startup.s.o: c_COMPILER ../source/init/startup.s
 DEPFILE = kernel@exe/source_init_startup.s.o.d
 ARGS = -Ikernel@exe -I. -I.. -I../include -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c17 -g -target arm-none-linux -Wall -g -Og -ffreestanding -nostdlib -mcpu=cortex-m7 -mthumb -mfloat-abi=hard -Wno-unused-command-line-argument -fno-stack-protector -no-pie

build kernel@exe/source_main.cpp.o: cpp_COMPILER ../source/main.cpp
 DEPFILE = kernel@exe/source_main.cpp.o.d
 ARGS = -Ikernel@exe -I. -I.. -I../include -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -std=c++2a -g -target arm-none-linux -Wall -g -Og -ffreestanding -nostdlib -mcpu=cortex-m7 -mthumb -mfloat-abi=hard -Wno-unused-command-line-argument -fno-stack-protector -no-pie -fno-rtti -fomit-frame-pointer -fno-exceptions -fno-asynchronous-unwind-tables -fno-unwind-tables

build kernel@exe/source_hw_stm32f7_uart.cpp.o: cpp_COMPILER ../source/hw/stm32f7/uart.cpp
 DEPFILE = kernel@exe/source_hw_stm32f7_uart.cpp.o.d
 ARGS = -Ikernel@exe -I. -I.. -I../include -Xclang -fcolor-diagnostics -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -std=c++2a -g -target arm-none-linux -Wall -g -Og -ffreestanding -nostdlib -mcpu=cortex-m7 -mthumb -mfloat-abi=hard -Wno-unused-command-line-argument -fno-stack-protector -no-pie -fno-rtti -fomit-frame-pointer -fno-exceptions -fno-asynchronous-unwind-tables -fno-unwind-tables

build kernel: cpp_LINKER kernel@exe/source_init_vtor.s.o kernel@exe/source_init_startup.s.o kernel@exe/source_main.cpp.o kernel@exe/source_hw_stm32f7_uart.cpp.o
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -fuse-ld=lld -Wl,-T /home/werwolv/Dev/RTOS/kernel/linker.ld -target arm-none-linux -mfloat-abi=hard -ffreestanding -nostdlib -nodefaultlibs -no-pie

build kernel.bin: CUSTOM_COMMAND kernel | kernel
 COMMAND = llvm-objcopy --input-target=aarch64-none-linux --strip-all -O binary /home/werwolv/Dev/RTOS/kernel/build/kernel kernel.bin
 description = Generating$ kernel.bin$ with$ a$ custom$ command.

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

build dist: phony meson-dist

# Suffix

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony kernel kernel.bin

build clean: phony meson-clean

build meson-clean-ctlist: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal cleantrees /home/werwolv/Dev/RTOS/kernel/build/meson-private/cleantrees.dat
 description = Cleaning$ custom$ target$ directories.

build clean-ctlist: phony meson-clean-ctlist

build meson-clean: CUSTOM_COMMAND PHONY | clean-ctlist
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning.

build build.ninja: REGENERATE_BUILD ../meson.build /home/werwolv/Dev/RTOS/arm32 meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build /home/werwolv/Dev/RTOS/arm32 meson-private/coredata.dat: phony 

default all

